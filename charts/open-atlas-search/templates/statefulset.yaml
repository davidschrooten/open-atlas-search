{{- if eq .Values.deploymentMode "cluster" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "open-atlas-search.fullname" . }}
  labels:
    {{- include "open-atlas-search.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "open-atlas-search.fullname" . }}-headless
  replicas: {{ .Values.statefulSet.replicas }}
  selector:
    matchLabels:
      {{- include "open-atlas-search.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "open-atlas-search.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "open-atlas-search.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.config.server.port }}
              protocol: TCP
            - name: raft
              containerPort: {{ .Values.cluster.raftPort }}
              protocol: TCP
            - name: grpc
              containerPort: {{ .Values.cluster.grpcPort }}
              protocol: TCP
          env:
            - name: CONFIG_PATH
              value: "/app/config/config.yaml"
            - name: NODE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: HEADLESS_SERVICE_NAME
              value: {{ include "open-atlas-search.fullname" . }}-headless
            {{- if .Values.authentication.enabled }}
            - name: OAS_SERVER_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.authentication.existingSecret }}{{ .Values.authentication.existingSecret }}{{ else }}{{ include "open-atlas-search.fullname" . }}-auth{{ end }}
                  key: {{ .Values.authentication.secretKeys.username }}
            - name: OAS_SERVER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.authentication.existingSecret }}{{ .Values.authentication.existingSecret }}{{ else }}{{ include "open-atlas-search.fullname" . }}-auth{{ end }}
                  key: {{ .Values.authentication.secretKeys.password }}
            {{- end }}
            {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          {{- with .Values.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /app/config
              readOnly: true
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
      volumes:
        - name: config
          configMap:
            name: {{ include "open-atlas-search.configMapName" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass }}
        {{- end }}
{{- end }}
